// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
var e,t;e=this,t=function(e){"use strict";var t,r="function"==typeof Object.defineProperty?Object.defineProperty:null,n=Object.defineProperty,o=Object.prototype,a=o.toString,i=o.__defineGetter__,u=o.__defineSetter__,l=o.__lookupGetter__,f=o.__lookupSetter__;function c(e){return e!=e}function _(e){return Math.abs(e)}function p(e,t,r,n,o){var a,i,u,l,f,p,d,b,s,y,v;if(f=r<0?(1-e)*r:0,p=o<0?-o:0,a=0,e<=0)return n[p]=a,n[p+o]=0,n;if(1===e||0===r)return c(t[f])?(n[p]=a,n[p+o]=0,n):(n[p]=t[f],n[p+o]=1,n);for(i=0,u=0,y=0,v=0;v<e;v++)!1===c(d=t[f])&&(b=a+d,s=_(a)>=_(d)?a-b+d:d-b+a,a=b,b=u+s,l=_(u)>=_(s)?u-b+s:s-b+u,u=b,i+=l,y+=1),f+=r;return n[p]=a+u+i,n[p+o]=y,n}function d(e,t,r,n,o,a,i){var u,l,f,p,d,b,s,y,v,j,m;if(d=n,b=i,u=0,e<=0)return o[b]=u,o[b+a]=0,o;if(1===e||0===r)return c(t[d])?(o[b]=u,o[b+a]=0,o):(o[b]=t[d],o[b+a]=1,o);for(l=0,f=0,j=0,m=0;m<e;m++)!1===c(s=t[d])&&(y=u+s,v=_(u)>=_(s)?u-y+s:s-y+u,u=y,y=f+v,p=_(f)>=_(v)?f-y+v:v-y+f,f=y,l+=p,j+=1),d+=r;return o[b]=u+f+l,o[b+a]=j,o}t=function(){try{return r({},"x",{}),!0}catch(e){return!1}}()?n:function(e,t,r){var n,c,_,p;if("object"!=typeof e||null===e||"[object Array]"===a.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof r||null===r||"[object Array]"===a.call(r))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+r+"`.");if((c="value"in r)&&(l.call(e,t)||f.call(e,t)?(n=e.__proto__,e.__proto__=o,delete e[t],e[t]=r.value,e.__proto__=n):e[t]=r.value),_="get"in r,p="set"in r,c&&(_||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return _&&i&&i.call(e,t,r.get),p&&u&&u.call(e,t,r.set),e},t(p,"ndarray",{configurable:!1,enumerable:!1,writable:!1,value:d}),e.default=p,e.ndarray=d,Object.defineProperty(e,"__esModule",{value:!0})},"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).dnannsumkbn2={});
//# sourceMappingURL=index.js.map
